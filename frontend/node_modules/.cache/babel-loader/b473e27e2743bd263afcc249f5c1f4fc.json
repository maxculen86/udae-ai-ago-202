{"ast":null,"code":"var _jsxFileName = \"/Users/CulenSound/git/api-ago-2020/client/src/components/sections/Dashboard/Users.js\";\nimport React from 'react';\nimport MaterialTable from 'material-table';\nimport { forwardRef } from 'react';\nimport AddBox from '@material-ui/icons/AddBox';\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\nimport Check from '@material-ui/icons/Check';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport Clear from '@material-ui/icons/Clear';\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\nimport Edit from '@material-ui/icons/Edit';\nimport FilterList from '@material-ui/icons/FilterList';\nimport FirstPage from '@material-ui/icons/FirstPage';\nimport LastPage from '@material-ui/icons/LastPage';\nimport Remove from '@material-ui/icons/Remove';\nimport SaveAlt from '@material-ui/icons/SaveAlt';\nimport Search from '@material-ui/icons/Search';\nimport ViewColumn from '@material-ui/icons/ViewColumn';\nimport { fetchUsers } from '../../../controller/apiMed.controller';\nexport default function MaterialTableDemo() {\n  const requestUserData = async function () {\n    let fetchUsersResult = await fetchUsers();\n\n    if (fetchUsersResult.responseStatus === 0) {\n      return formatJsonGrid(fetchUsersResult.data);\n    }\n\n    if (fetchUsersResult.responseStatus === 1) {\n      alert(fetchUsersResult.mensaje);\n    }\n  };\n\n  function formatJsonGrid(jsonObject) {\n    var dataGrid = [];\n    var i;\n\n    for (i = 0; i < jsonObject.length; i++) {\n      //console.log(\"dataI\", dataGrid.data[i]);\n      var newEntry = {\n        \"id\": i + 1,\n        \"nombre\": jsonObject[i].name,\n        \"apellido\": jsonObject[i].name,\n        \"perfil\": jsonObject[i].profile,\n        \"fechaAlta\": jsonObject[i].dateCreation,\n        \"fechaBaja\": jsonObject[i].dateDelete\n      };\n      dataGrid.push(newEntry);\n    }\n\n    return dataGrid;\n  }\n\n  var dataResult = [{\n    id: '1',\n    nombre: 'Cacho',\n    apellido: 'Fontana',\n    perfil: 1,\n    fechaAlta: '01/02/2020',\n    fechaBaja: ''\n  }];\n  let requestresult = requestUserData;\n  console.log(\"DATARESUTL\", dataResult);\n  console.log(\"REQUESTRESUTL\", requestresult);\n  const [state, setState] = React.useState({\n    columns: [{\n      title: 'Id',\n      field: 'id'\n    }, {\n      title: 'Nombre',\n      field: 'nombre'\n    }, {\n      title: 'Apellido',\n      field: 'apellido'\n    }, {\n      title: 'Perfil',\n      field: 'perfil',\n      lookup: {\n        1: 'Administrador',\n        2: 'Medico',\n        3: 'Secretaria',\n        4: 'Paciente'\n      }\n    }, {\n      title: 'Fecha Alta',\n      field: 'fechaAlta',\n      type: 'date'\n    }, {\n      title: 'Fecha Baja',\n      field: 'fechaBaja',\n      type: 'date'\n    }],\n    data: [{\n      id: '1',\n      nombre: 'Cacho',\n      apellido: 'Fontana',\n      perfil: 1,\n      fechaAlta: '01/02/2020',\n      fechaBaja: ''\n    }]\n  });\n  const tableIcons = {\n    Add: forwardRef((props, ref) => /*#__PURE__*/React.createElement(AddBox, Object.assign({}, props, {\n      ref: ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 37\n      }\n    }))),\n    Check: forwardRef((props, ref) => /*#__PURE__*/React.createElement(Check, Object.assign({}, props, {\n      ref: ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 39\n      }\n    }))),\n    Clear: forwardRef((props, ref) => /*#__PURE__*/React.createElement(Clear, Object.assign({}, props, {\n      ref: ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 39\n      }\n    }))),\n    Delete: forwardRef((props, ref) => /*#__PURE__*/React.createElement(DeleteOutline, Object.assign({}, props, {\n      ref: ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 40\n      }\n    }))),\n    DetailPanel: forwardRef((props, ref) => /*#__PURE__*/React.createElement(ChevronRight, Object.assign({}, props, {\n      ref: ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 45\n      }\n    }))),\n    Edit: forwardRef((props, ref) => /*#__PURE__*/React.createElement(Edit, Object.assign({}, props, {\n      ref: ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 38\n      }\n    }))),\n    Export: forwardRef((props, ref) => /*#__PURE__*/React.createElement(SaveAlt, Object.assign({}, props, {\n      ref: ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 40\n      }\n    }))),\n    Filter: forwardRef((props, ref) => /*#__PURE__*/React.createElement(FilterList, Object.assign({}, props, {\n      ref: ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 40\n      }\n    }))),\n    FirstPage: forwardRef((props, ref) => /*#__PURE__*/React.createElement(FirstPage, Object.assign({}, props, {\n      ref: ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 43\n      }\n    }))),\n    LastPage: forwardRef((props, ref) => /*#__PURE__*/React.createElement(LastPage, Object.assign({}, props, {\n      ref: ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 42\n      }\n    }))),\n    NextPage: forwardRef((props, ref) => /*#__PURE__*/React.createElement(ChevronRight, Object.assign({}, props, {\n      ref: ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 42\n      }\n    }))),\n    PreviousPage: forwardRef((props, ref) => /*#__PURE__*/React.createElement(ChevronLeft, Object.assign({}, props, {\n      ref: ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 46\n      }\n    }))),\n    ResetSearch: forwardRef((props, ref) => /*#__PURE__*/React.createElement(Clear, Object.assign({}, props, {\n      ref: ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 45\n      }\n    }))),\n    Search: forwardRef((props, ref) => /*#__PURE__*/React.createElement(Search, Object.assign({}, props, {\n      ref: ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 40\n      }\n    }))),\n    SortArrow: forwardRef((props, ref) => /*#__PURE__*/React.createElement(ArrowUpward, Object.assign({}, props, {\n      ref: ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 43\n      }\n    }))),\n    ThirdStateCheck: forwardRef((props, ref) => /*#__PURE__*/React.createElement(Remove, Object.assign({}, props, {\n      ref: ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 49\n      }\n    }))),\n    ViewColumn: forwardRef((props, ref) => /*#__PURE__*/React.createElement(ViewColumn, Object.assign({}, props, {\n      ref: ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 44\n      }\n    })))\n  }; //const data2 = requestUserData();\n  //state.data = data2;\n\n  console.log(\"stateDAta\", state.data);\n  return /*#__PURE__*/React.createElement(MaterialTable, {\n    icons: tableIcons,\n    title: \"Administracion de Usuarios\",\n    columns: state.columns,\n    data: dataResult,\n    editable: {\n      onRowAdd: newData => new Promise(resolve => {\n        setTimeout(() => {\n          resolve();\n          setState(prevState => {\n            const data = [...prevState.data];\n            data.push(newData);\n            return { ...prevState,\n              data\n            };\n          });\n        }, 600);\n      }),\n      onRowUpdate: (newData, oldData) => new Promise(resolve => {\n        setTimeout(() => {\n          resolve();\n\n          if (oldData) {\n            setState(prevState => {\n              const data = [...prevState.data];\n              data[data.indexOf(oldData)] = newData;\n              return { ...prevState,\n                data\n              };\n            });\n          }\n        }, 600);\n      }),\n      onRowDelete: oldData => new Promise(resolve => {\n        setTimeout(() => {\n          resolve();\n          setState(prevState => {\n            const data = [...prevState.data];\n            data.splice(data.indexOf(oldData), 1);\n            return { ...prevState,\n              data\n            };\n          });\n        }, 600);\n      })\n    },\n    localization: {\n      pagination: {\n        labelDisplayedRows: '{from}-{to} de {count}'\n      },\n      toolbar: {\n        nRowsSelected: '{0} fila(s) seleccionadas',\n        searchTooltip: 'Buscar',\n        searchPlaceholder: 'Ingrese dato a buscar'\n      },\n      header: {\n        actions: 'Acciones'\n      },\n      body: {\n        addTooltip: 'Nuevo',\n        deleteTooltip: 'Eliminar',\n        editTooltip: 'Editar',\n        emptyDataSourceMessage: 'Sin registros',\n        filterRow: {\n          filterTooltip: 'Filtros',\n          filterPlaceHolder: 'Filtros'\n        },\n        editRow: {\n          deleteText: 'Esta seguro de eliminar usuario?',\n          cancelTooltip: 'Cancelar',\n          saveTooltip: 'Guardar'\n        }\n      }\n    },\n    options: {\n      filtering: true,\n      actionsColumnIndex: -1,\n      selection: true\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 5\n    }\n  });\n}","map":{"version":3,"sources":["/Users/CulenSound/git/api-ago-2020/client/src/components/sections/Dashboard/Users.js"],"names":["React","MaterialTable","forwardRef","AddBox","ArrowUpward","Check","ChevronLeft","ChevronRight","Clear","DeleteOutline","Edit","FilterList","FirstPage","LastPage","Remove","SaveAlt","Search","ViewColumn","fetchUsers","MaterialTableDemo","requestUserData","fetchUsersResult","responseStatus","formatJsonGrid","data","alert","mensaje","jsonObject","dataGrid","i","length","newEntry","name","profile","dateCreation","dateDelete","push","dataResult","id","nombre","apellido","perfil","fechaAlta","fechaBaja","requestresult","console","log","state","setState","useState","columns","title","field","lookup","type","tableIcons","Add","props","ref","Delete","DetailPanel","Export","Filter","NextPage","PreviousPage","ResetSearch","SortArrow","ThirdStateCheck","onRowAdd","newData","Promise","resolve","setTimeout","prevState","onRowUpdate","oldData","indexOf","onRowDelete","splice","pagination","labelDisplayedRows","toolbar","nRowsSelected","searchTooltip","searchPlaceholder","header","actions","body","addTooltip","deleteTooltip","editTooltip","emptyDataSourceMessage","filterRow","filterTooltip","filterPlaceHolder","editRow","deleteText","cancelTooltip","saveTooltip","filtering","actionsColumnIndex","selection"],"mappings":"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","sourcesContent":["import React from 'react';\nimport MaterialTable from 'material-table';\nimport { forwardRef } from 'react';\n\nimport AddBox from '@material-ui/icons/AddBox';\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\nimport Check from '@material-ui/icons/Check';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport Clear from '@material-ui/icons/Clear';\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\nimport Edit from '@material-ui/icons/Edit';\nimport FilterList from '@material-ui/icons/FilterList';\nimport FirstPage from '@material-ui/icons/FirstPage';\nimport LastPage from '@material-ui/icons/LastPage';\nimport Remove from '@material-ui/icons/Remove';\nimport SaveAlt from '@material-ui/icons/SaveAlt';\nimport Search from '@material-ui/icons/Search';\nimport ViewColumn from '@material-ui/icons/ViewColumn';\nimport { fetchUsers } from '../../../controller/apiMed.controller';\n\nexport default function MaterialTableDemo() {\n  \n  const requestUserData = async function(){\n\n    let fetchUsersResult = await fetchUsers();\n    if (fetchUsersResult.responseStatus === 0){\n      return formatJsonGrid(fetchUsersResult.data);\n    }\n    if (fetchUsersResult.responseStatus === 1){\n      alert(fetchUsersResult.mensaje);\n    }\n  }\n\n  function formatJsonGrid (jsonObject) {\n    var dataGrid = [];\n    var i;\n    for (i = 0; i < jsonObject.length; i++) {\n      //console.log(\"dataI\", dataGrid.data[i]);\n      var newEntry = {\"id\" : i + 1,\n                      \"nombre\" : jsonObject[i].name,\n                      \"apellido\" :jsonObject[i].name,\n                      \"perfil\":jsonObject[i].profile,\n                      \"fechaAlta\":jsonObject[i].dateCreation,\n                      \"fechaBaja\":jsonObject[i].dateDelete\n      };\n      dataGrid.push(newEntry);\n    }\n    return dataGrid;\n  }\n\n  var dataResult = [\n    {\n      id: '1',\n      nombre: 'Cacho',\n      apellido: 'Fontana',\n      perfil: 1,\n      fechaAlta: '01/02/2020',\n      fechaBaja:''\n    },\n  ];\n  \n  let requestresult = requestUserData;\n\n  console.log(\"DATARESUTL\", dataResult);\n  console.log(\"REQUESTRESUTL\", requestresult);\n  const [state, setState] = React.useState({\n    columns: [\n      { title: 'Id', field: 'id' },\n      { title: 'Nombre', field: 'nombre' },\n      { title: 'Apellido', field: 'apellido' },\n      {\n        title: 'Perfil',\n        field: 'perfil',\n        lookup: { 1: 'Administrador', 2: 'Medico', 3: 'Secretaria', 4: 'Paciente' },\n      },\n      { title: 'Fecha Alta', field: 'fechaAlta', type: 'date' },\n      { title: 'Fecha Baja', field: 'fechaBaja', type: 'date' },\n    ],\n    data: [\n      {\n        id: '1',\n        nombre: 'Cacho',\n        apellido: 'Fontana',\n        perfil: 1,\n        fechaAlta: '01/02/2020',\n        fechaBaja:''\n      },\n    ],\n  });\n\n  const tableIcons = {\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n    SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\n};\n\n//const data2 = requestUserData();\n//state.data = data2;\nconsole.log(\"stateDAta\", state.data);\n\n  return (\n\n    <MaterialTable\n      icons={tableIcons}\n      title=\"Administracion de Usuarios\"\n      columns={state.columns}\n      data={dataResult}\n      editable={{\n        onRowAdd: (newData) =>\n          new Promise((resolve) => {\n            setTimeout(() => {\n              resolve();\n              setState((prevState) => {\n                const data = [...prevState.data];\n                data.push(newData);\n                return { ...prevState, data };\n              });\n            }, 600);\n          }),\n        onRowUpdate: (newData, oldData) =>\n          new Promise((resolve) => {\n            setTimeout(() => {\n              resolve();\n              if (oldData) {\n                setState((prevState) => {\n                  const data = [...prevState.data];\n                  data[data.indexOf(oldData)] = newData;\n                  return { ...prevState, data };\n                });\n              }\n            }, 600);\n          }),\n        onRowDelete: (oldData) =>\n          new Promise((resolve) => {\n            setTimeout(() => {\n              resolve();\n              setState((prevState) => {\n                const data = [...prevState.data];\n                data.splice(data.indexOf(oldData), 1);\n                return { ...prevState, data };\n              });\n            }, 600);\n          }),\n      }}\n      localization={{\n        pagination: {\n            labelDisplayedRows: '{from}-{to} de {count}'\n        },\n        toolbar: {\n            nRowsSelected: '{0} fila(s) seleccionadas',\n            searchTooltip: 'Buscar',\n            searchPlaceholder:'Ingrese dato a buscar'\n        },\n        header: {\n            actions: 'Acciones'\n        },\n        body: {\n            addTooltip: 'Nuevo',\n            deleteTooltip:'Eliminar',\n            editTooltip:'Editar',\n            emptyDataSourceMessage: 'Sin registros',\n            filterRow: {\n                filterTooltip: 'Filtros',\n                filterPlaceHolder: 'Filtros'\n            },\n            editRow: {\n              deleteText: 'Esta seguro de eliminar usuario?',\n              cancelTooltip: 'Cancelar',\n              saveTooltip:'Guardar'\n          }\n        }\n    }}\n    options={{\n      filtering: true,\n      actionsColumnIndex: -1,\n      selection: true\n    }}\n    />\n  );\n}\n"]},"metadata":{},"sourceType":"module"}