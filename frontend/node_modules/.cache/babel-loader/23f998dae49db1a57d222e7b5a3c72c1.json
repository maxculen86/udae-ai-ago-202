{"ast":null,"code":"import urlWebServices from './webServices.js';\nexport const loginGrupos = async function (login, signal) {\n  //url webservices\n  let url = urlWebServices.loginGrupo; //armo json con datos\n  //const formData = new URLSearchParams();\n  //formData.append('email', login.email);\n  //formData.append('password', login.password);\n  //alert(login.email);\n  //console.log(\"url\",url);\n\n  var myHeaders = new Headers();\n  myHeaders.append(\"Content-Type\", \"application/x-www-form-urlencoded\"); //myHeaders.append( \"x-access-token\", 'WebToken.webToken');\n\n  var urlencoded = new URLSearchParams();\n  urlencoded.append(\"email\", login.email);\n  urlencoded.append(\"password\", login.password);\n  var requestOptions = {\n    method: 'POST',\n    headers: myHeaders,\n    body: urlencoded,\n    redirect: 'follow'\n  };\n\n  try {\n    // let response = await fetch(url,{\n    //     method: 'POST', // or 'PUT'\n    //     mode: \"cors\",\n    //     headers:{\n    //         'Accept':'application/x-www-form-urlencoded',\n    //        // 'x-access-token': WebToken.webToken,\n    //         'Origin':'http://localhost:3000',\n    //         'Content-Type': 'application/x-www-form-urlencoded'},\n    //     body: formData,\n    //     signal: signal    \n    // });\n    let response = await fetch(url, requestOptions);\n    console.log(response.status);\n    let rdo = response.status;\n    console.log(rdo.toString);\n    let data = await response.json();\n    console.log(\"jsonresponse\", data);\n\n    switch (rdo) {\n      case 201:\n        {\n          //guardo token\n          localStorage.setItem(\"x\", data.token.token); //guardo usuario logueado\n\n          let user = data.token.user;\n          localStorage.setItem(\"nombre\", user.name);\n          localStorage.setItem(\"email\", user.email);\n          return {\n            rdo: 0,\n            mensaje: \"Ok\"\n          }; //correcto\n        }\n\n      case 202:\n        {\n          //error mail\n          return {\n            rdo: 1,\n            mensaje: \"El mail ingresado no existe en nuestra base.\"\n          };\n        }\n\n      case 203:\n        {\n          //error password\n          return {\n            rdo: 1,\n            mensaje: \"La contraseña no es correcta.\"\n          };\n        }\n\n      default:\n        {\n          //otro error\n          return {\n            rdo: 1,\n            mensaje: \"Ha ocurrido un error\"\n          };\n        }\n    }\n  } catch (error) {\n    console.log(\"error\", error);\n  }\n\n  ;\n};","map":{"version":3,"sources":["/Users/CulenSound/git/api-ago-2020/client/src/controller/apiMed.controller.js"],"names":["urlWebServices","loginGrupos","login","signal","url","loginGrupo","myHeaders","Headers","append","urlencoded","URLSearchParams","email","password","requestOptions","method","headers","body","redirect","response","fetch","console","log","status","rdo","toString","data","json","localStorage","setItem","token","user","name","mensaje","error"],"mappings":"AAAA,OAAOA,cAAP,MAA2B,kBAA3B;AAEA,OAAO,MAAMC,WAAW,GAAE,gBAAeC,KAAf,EAAqBC,MAArB,EAC1B;AACI;AACA,MAAIC,GAAG,GAAGJ,cAAc,CAACK,UAAzB,CAFJ,CAGI;AACA;AACA;AACA;AACA;AACA;;AACA,MAAIC,SAAS,GAAG,IAAIC,OAAJ,EAAhB;AACAD,EAAAA,SAAS,CAACE,MAAV,CAAiB,cAAjB,EAAiC,mCAAjC,EAVJ,CAWI;;AACA,MAAIC,UAAU,GAAG,IAAIC,eAAJ,EAAjB;AACAD,EAAAA,UAAU,CAACD,MAAX,CAAkB,OAAlB,EAA2BN,KAAK,CAACS,KAAjC;AACAF,EAAAA,UAAU,CAACD,MAAX,CAAkB,UAAlB,EAA8BN,KAAK,CAACU,QAApC;AAEA,MAAIC,cAAc,GAAG;AACjBC,IAAAA,MAAM,EAAE,MADS;AAEjBC,IAAAA,OAAO,EAAET,SAFQ;AAGjBU,IAAAA,IAAI,EAAEP,UAHW;AAIjBQ,IAAAA,QAAQ,EAAE;AAJO,GAArB;;AAOA,MACA;AACI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAIC,QAAQ,GAAG,MAAMC,KAAK,CAACf,GAAD,EAAKS,cAAL,CAA1B;AACAO,IAAAA,OAAO,CAACC,GAAR,CAAYH,QAAQ,CAACI,MAArB;AACA,QAAIC,GAAG,GAAGL,QAAQ,CAACI,MAAnB;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAYE,GAAG,CAACC,QAAhB;AACA,QAAIC,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAT,EAAjB;AACAN,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA2BI,IAA3B;;AACI,YAAOF,GAAP;AAEI,WAAK,GAAL;AACA;AACI;AACAI,UAAAA,YAAY,CAACC,OAAb,CAAqB,GAArB,EAAyBH,IAAI,CAACI,KAAL,CAAWA,KAApC,EAFJ,CAGI;;AACA,cAAIC,IAAI,GAAGL,IAAI,CAACI,KAAL,CAAWC,IAAtB;AACAH,UAAAA,YAAY,CAACC,OAAb,CAAqB,QAArB,EAA8BE,IAAI,CAACC,IAAnC;AACAJ,UAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA6BE,IAAI,CAACnB,KAAlC;AAEA,iBAAQ;AAACY,YAAAA,GAAG,EAAC,CAAL;AAAOS,YAAAA,OAAO,EAAC;AAAf,WAAR,CARJ,CAQkC;AACjC;;AACD,WAAK,GAAL;AACA;AACI;AACA,iBAAQ;AAACT,YAAAA,GAAG,EAAC,CAAL;AAAOS,YAAAA,OAAO,EAAC;AAAf,WAAR;AACH;;AACD,WAAK,GAAL;AACA;AACI;AACA,iBAAQ;AAACT,YAAAA,GAAG,EAAC,CAAL;AAAOS,YAAAA,OAAO,EAAC;AAAf,WAAR;AACH;;AACD;AACA;AACI;AACA,iBAAQ;AAACT,YAAAA,GAAG,EAAC,CAAL;AAAOS,YAAAA,OAAO,EAAC;AAAf,WAAR;AACH;AA3BL;AA6BP,GAhDD,CAiDA,OAAMC,KAAN,EACA;AACIb,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAoBY,KAApB;AACH;;AAAA;AACJ,CA7EM","sourcesContent":["import urlWebServices from './webServices.js';\r\n\r\nexport const loginGrupos= async function(login,signal)\r\n{\r\n    //url webservices\r\n    let url = urlWebServices.loginGrupo;\r\n    //armo json con datos\r\n    //const formData = new URLSearchParams();\r\n    //formData.append('email', login.email);\r\n    //formData.append('password', login.password);\r\n    //alert(login.email);\r\n    //console.log(\"url\",url);\r\n    var myHeaders = new Headers();\r\n    myHeaders.append(\"Content-Type\", \"application/x-www-form-urlencoded\");\r\n    //myHeaders.append( \"x-access-token\", 'WebToken.webToken');\r\n    var urlencoded = new URLSearchParams();\r\n    urlencoded.append(\"email\", login.email);\r\n    urlencoded.append(\"password\", login.password);\r\n    \r\n    var requestOptions = {\r\n        method: 'POST',\r\n        headers: myHeaders,\r\n        body: urlencoded,\r\n        redirect: 'follow'\r\n    };\r\n\r\n    try\r\n    {\r\n        // let response = await fetch(url,{\r\n        //     method: 'POST', // or 'PUT'\r\n        //     mode: \"cors\",\r\n        //     headers:{\r\n        //         'Accept':'application/x-www-form-urlencoded',\r\n        //        // 'x-access-token': WebToken.webToken,\r\n        //         'Origin':'http://localhost:3000',\r\n        //         'Content-Type': 'application/x-www-form-urlencoded'},\r\n        //     body: formData,\r\n        //     signal: signal    \r\n        // });\r\n        let response = await fetch(url,requestOptions);\r\n        console.log(response.status);\r\n        let rdo = response.status;\r\n        console.log(rdo.toString);\r\n        let data = await response.json();\r\n        console.log(\"jsonresponse\",data);\r\n            switch(rdo)\r\n            {\r\n                case 201:\r\n                {\r\n                    //guardo token\r\n                    localStorage.setItem(\"x\",data.token.token);\r\n                    //guardo usuario logueado\r\n                    let user = data.token.user;\r\n                    localStorage.setItem(\"nombre\",user.name);\r\n                    localStorage.setItem(\"email\",user.email);\r\n                    \r\n                    return ({rdo:0,mensaje:\"Ok\"});//correcto\r\n                }\r\n                case 202:\r\n                {\r\n                    //error mail\r\n                    return ({rdo:1,mensaje:\"El mail ingresado no existe en nuestra base.\"});\r\n                }\r\n                case 203:\r\n                {\r\n                    //error password\r\n                    return ({rdo:1,mensaje:\"La contraseña no es correcta.\"});\r\n                }\r\n                default:\r\n                {\r\n                    //otro error\r\n                    return ({rdo:1,mensaje:\"Ha ocurrido un error\"});                \r\n                }\r\n            }\r\n    }\r\n    catch(error)\r\n    {\r\n        console.log(\"error\",error);\r\n    };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}