{"ast":null,"code":"var _jsxFileName = \"/Users/CulenSound/git/api-ago-2020/client/src/components/sections/Dashboard/Recetas.js\";\nimport React, { useRef } from 'react';\nimport MaterialTable from 'material-table';\nimport { forwardRef } from 'react';\nimport AddBox from '@material-ui/icons/AddBox';\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\nimport Check from '@material-ui/icons/Check';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport Clear from '@material-ui/icons/Clear';\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\nimport Edit from '@material-ui/icons/Edit';\nimport FilterList from '@material-ui/icons/FilterList';\nimport FirstPage from '@material-ui/icons/FirstPage';\nimport LastPage from '@material-ui/icons/LastPage';\nimport Remove from '@material-ui/icons/Remove';\nimport SaveAlt from '@material-ui/icons/SaveAlt';\nimport Search from '@material-ui/icons/Search';\nimport ViewColumn from '@material-ui/icons/ViewColumn';\nexport default function MaterialTableDemo() {\n  const [state, setState] = React.useState({\n    columns: [{\n      title: 'Id',\n      field: 'id',\n      type: 'text'\n    }, {\n      title: 'Paciente',\n      field: 'paciente',\n      lookup: {\n        1: 'Paciente 1',\n        2: 'Paciente 2',\n        3: 'Paciente 3',\n        4: 'Paciente 4'\n      }\n    }, {\n      title: 'Medico',\n      field: 'medico',\n      lookup: {\n        1: 'Dr. One',\n        2: 'Dr. Test',\n        3: 'Dr. favaloro',\n        4: 'Dr. strange'\n      }\n    }, {\n      title: 'Descripcion',\n      field: 'descripcion',\n      type: 'text'\n    }, {\n      title: 'Fecha Carga',\n      field: 'fechaCarga',\n      type: 'date'\n    }, {\n      title: 'Valido Hasta',\n      field: 'validoHasta',\n      type: 'date'\n    }, {\n      title: 'Archivo',\n      field: 'archivo',\n      type: 'file'\n    }],\n    data: [{\n      id: '1',\n      paciente: 1,\n      medico: 2,\n      Descripcion: 'Ibuprofeno',\n      fechaCarga: '01/02/2020',\n      validoHasta: '01/03/2020'\n    }, {\n      id: '2',\n      paciente: 2,\n      medico: 2,\n      Descripcion: 'Amoxidal 500',\n      fechaCarga: '01/02/2020',\n      validoHasta: '01/03/2020'\n    }, {\n      id: '3',\n      paciente: 1,\n      medico: 2,\n      Descripcion: 'Reposo',\n      fechaCarga: '01/02/2020',\n      validoHasta: '01/03/2020'\n    }, {\n      id: '4',\n      paciente: 3,\n      medico: 2,\n      Descripcion: 'Nebulizaciones',\n      fechaCarga: '01/02/2020',\n      validoHasta: '01/03/2020'\n    }, {\n      id: '5',\n      paciente: 4,\n      medico: 2,\n      Descripcion: 'Ibuprofeno',\n      fechaCarga: '01/02/2020',\n      validoHasta: '01/03/2020'\n    }, {\n      id: '6',\n      paciente: 1,\n      medico: 2,\n      Descripcion: 'Paracetamol',\n      fechaCarga: '01/02/2020',\n      validoHasta: '01/03/2020'\n    }]\n  });\n  const tableIcons = {\n    Add: forwardRef((props, ref) => /*#__PURE__*/React.createElement(AddBox, Object.assign({}, props, {\n      ref: ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 37\n      }\n    }))),\n    Check: forwardRef((props, ref) => /*#__PURE__*/React.createElement(Check, Object.assign({}, props, {\n      ref: ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 39\n      }\n    }))),\n    Clear: forwardRef((props, ref) => /*#__PURE__*/React.createElement(Clear, Object.assign({}, props, {\n      ref: ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 39\n      }\n    }))),\n    Delete: forwardRef((props, ref) => /*#__PURE__*/React.createElement(DeleteOutline, Object.assign({}, props, {\n      ref: ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 40\n      }\n    }))),\n    DetailPanel: forwardRef((props, ref) => /*#__PURE__*/React.createElement(ChevronRight, Object.assign({}, props, {\n      ref: ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 45\n      }\n    }))),\n    Edit: forwardRef((props, ref) => /*#__PURE__*/React.createElement(Edit, Object.assign({}, props, {\n      ref: ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 38\n      }\n    }))),\n    Export: forwardRef((props, ref) => /*#__PURE__*/React.createElement(SaveAlt, Object.assign({}, props, {\n      ref: ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 40\n      }\n    }))),\n    Filter: forwardRef((props, ref) => /*#__PURE__*/React.createElement(FilterList, Object.assign({}, props, {\n      ref: ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 40\n      }\n    }))),\n    FirstPage: forwardRef((props, ref) => /*#__PURE__*/React.createElement(FirstPage, Object.assign({}, props, {\n      ref: ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 43\n      }\n    }))),\n    LastPage: forwardRef((props, ref) => /*#__PURE__*/React.createElement(LastPage, Object.assign({}, props, {\n      ref: ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 42\n      }\n    }))),\n    NextPage: forwardRef((props, ref) => /*#__PURE__*/React.createElement(ChevronRight, Object.assign({}, props, {\n      ref: ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 42\n      }\n    }))),\n    PreviousPage: forwardRef((props, ref) => /*#__PURE__*/React.createElement(ChevronLeft, Object.assign({}, props, {\n      ref: ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 46\n      }\n    }))),\n    ResetSearch: forwardRef((props, ref) => /*#__PURE__*/React.createElement(Clear, Object.assign({}, props, {\n      ref: ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 45\n      }\n    }))),\n    Search: forwardRef((props, ref) => /*#__PURE__*/React.createElement(Search, Object.assign({}, props, {\n      ref: ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 40\n      }\n    }))),\n    SortArrow: forwardRef((props, ref) => /*#__PURE__*/React.createElement(ArrowUpward, Object.assign({}, props, {\n      ref: ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 43\n      }\n    }))),\n    ThirdStateCheck: forwardRef((props, ref) => /*#__PURE__*/React.createElement(Remove, Object.assign({}, props, {\n      ref: ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 49\n      }\n    }))),\n    ViewColumn: forwardRef((props, ref) => /*#__PURE__*/React.createElement(ViewColumn, Object.assign({}, props, {\n      ref: ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 44\n      }\n    })))\n  };\n  const inputFile = useRef(null);\n\n  const onButtonClick = () => {\n    // `current` points to the mounted file input element\n    inputFile.current.click();\n  };\n\n  const actions = [{\n    icon: tableIcons.Add,\n    tooltip: 'Adjuntar archivo',\n    onClick: {\n      onButtonClick\n    },\n    position: \"row\"\n  }];\n  return /*#__PURE__*/React.createElement(MaterialTable, {\n    actions: actions,\n    icons: tableIcons,\n    title: \"Recetas\",\n    columns: state.columns,\n    data: state.data,\n    editable: {\n      onRowAdd: newData => new Promise(resolve => {\n        setTimeout(() => {\n          resolve();\n          setState(prevState => {\n            const data = [...prevState.data];\n            data.push(newData);\n            return { ...prevState,\n              data\n            };\n          });\n        }, 600);\n      }),\n      onRowUpdate: (newData, oldData) => new Promise(resolve => {\n        setTimeout(() => {\n          resolve();\n\n          if (oldData) {\n            setState(prevState => {\n              const data = [...prevState.data];\n              data[data.indexOf(oldData)] = newData;\n              return { ...prevState,\n                data\n              };\n            });\n          }\n        }, 600);\n      }),\n      onRowDelete: oldData => new Promise(resolve => {\n        setTimeout(() => {\n          resolve();\n          setState(prevState => {\n            const data = [...prevState.data];\n            data.splice(data.indexOf(oldData), 1);\n            return { ...prevState,\n              data\n            };\n          });\n        }, 600);\n      })\n    },\n    localization: {\n      pagination: {\n        labelDisplayedRows: '{from}-{to} de {count}'\n      },\n      toolbar: {\n        nRowsSelected: '{0} fila(s) seleccionadas',\n        searchTooltip: 'Buscar',\n        searchPlaceholder: 'Ingrese dato a buscar'\n      },\n      header: {\n        actions: 'Acciones'\n      },\n      body: {\n        addTooltip: 'Nueva receta',\n        deleteTooltip: 'Eliminar',\n        editTooltip: 'Editar',\n        emptyDataSourceMessage: 'Sin registros',\n        filterRow: {\n          filterTooltip: 'Filtros',\n          filterPlaceHolder: 'Filtros'\n        },\n        editRow: {\n          deleteText: 'Esta seguro de eliminar receta?',\n          cancelTooltip: 'Cancelar',\n          saveTooltip: 'Guardar'\n        }\n      }\n    },\n    options: {\n      filtering: true,\n      actionsColumnIndex: -1,\n      selection: true\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 5\n    }\n  });\n}","map":{"version":3,"sources":["/Users/CulenSound/git/api-ago-2020/client/src/components/sections/Dashboard/Recetas.js"],"names":["React","useRef","MaterialTable","forwardRef","AddBox","ArrowUpward","Check","ChevronLeft","ChevronRight","Clear","DeleteOutline","Edit","FilterList","FirstPage","LastPage","Remove","SaveAlt","Search","ViewColumn","MaterialTableDemo","state","setState","useState","columns","title","field","type","lookup","data","id","paciente","medico","Descripcion","fechaCarga","validoHasta","tableIcons","Add","props","ref","Delete","DetailPanel","Export","Filter","NextPage","PreviousPage","ResetSearch","SortArrow","ThirdStateCheck","inputFile","onButtonClick","current","click","actions","icon","tooltip","onClick","position","onRowAdd","newData","Promise","resolve","setTimeout","prevState","push","onRowUpdate","oldData","indexOf","onRowDelete","splice","pagination","labelDisplayedRows","toolbar","nRowsSelected","searchTooltip","searchPlaceholder","header","body","addTooltip","deleteTooltip","editTooltip","emptyDataSourceMessage","filterRow","filterTooltip","filterPlaceHolder","editRow","deleteText","cancelTooltip","saveTooltip","filtering","actionsColumnIndex","selection"],"mappings":"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","sourcesContent":["import React, { useRef } from 'react';\nimport MaterialTable from 'material-table';\nimport { forwardRef } from 'react';\n\nimport AddBox from '@material-ui/icons/AddBox';\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\nimport Check from '@material-ui/icons/Check';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport Clear from '@material-ui/icons/Clear';\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\nimport Edit from '@material-ui/icons/Edit';\nimport FilterList from '@material-ui/icons/FilterList';\nimport FirstPage from '@material-ui/icons/FirstPage';\nimport LastPage from '@material-ui/icons/LastPage';\nimport Remove from '@material-ui/icons/Remove';\nimport SaveAlt from '@material-ui/icons/SaveAlt';\nimport Search from '@material-ui/icons/Search';\nimport ViewColumn from '@material-ui/icons/ViewColumn';\n\nexport default function MaterialTableDemo() {\n  const [state, setState] = React.useState({\n    columns: [\n      { title: 'Id', field: 'id', type:'text' },\n      {\n        title: 'Paciente',\n        field: 'paciente',\n        lookup: { 1: 'Paciente 1', 2: 'Paciente 2', 3: 'Paciente 3', 4: 'Paciente 4' },\n      },\n      {\n        title: 'Medico',\n        field: 'medico',\n        lookup: { 1: 'Dr. One', 2: 'Dr. Test', 3: 'Dr. favaloro', 4: 'Dr. strange' },\n      },\n      { title: 'Descripcion', field: 'descripcion', type: 'text' },\n      { title: 'Fecha Carga', field: 'fechaCarga', type: 'date' },\n      { title: 'Valido Hasta', field: 'validoHasta', type: 'date' },\n      { title: 'Archivo', field: 'archivo', type: 'file' },\n    ],\n    data: [\n      {\n        id: '1',\n        paciente: 1,\n        medico: 2,\n        Descripcion:'Ibuprofeno',\n        fechaCarga: '01/02/2020',\n        validoHasta:'01/03/2020'\n      },\n      {\n        id: '2',\n        paciente: 2,\n        medico: 2,\n        Descripcion:'Amoxidal 500',\n        fechaCarga: '01/02/2020',\n        validoHasta:'01/03/2020'\n      },\n      {\n        id: '3',\n        paciente: 1,\n        medico: 2,\n        Descripcion:'Reposo',\n        fechaCarga: '01/02/2020',\n        validoHasta:'01/03/2020'\n      },\n      {\n        id: '4',\n        paciente: 3,\n        medico: 2,\n        Descripcion:'Nebulizaciones',\n        fechaCarga: '01/02/2020',\n        validoHasta:'01/03/2020'\n      },\n      {\n        id: '5',\n        paciente: 4,\n        medico: 2,\n        Descripcion:'Ibuprofeno',\n        fechaCarga: '01/02/2020',\n        validoHasta:'01/03/2020'\n      },\n      {\n        id: '6',\n        paciente: 1,\n        medico: 2,\n        Descripcion:'Paracetamol',\n        fechaCarga: '01/02/2020',\n        validoHasta:'01/03/2020'\n      },\n    ],\n    \n  });\n\n  const tableIcons = {\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n    SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\n};\n\nconst inputFile = useRef(null);\n\nconst onButtonClick = () => {\n  // `current` points to the mounted file input element\n inputFile.current.click();\n};\n\nconst actions = [\n    {\n      icon: tableIcons.Add,\n      tooltip: 'Adjuntar archivo',\n      onClick: {onButtonClick},\n      position: \"row\"\n    }\n];\n\n  return (\n    \n    <MaterialTable\n      actions={actions}\n      icons={tableIcons}\n      title=\"Recetas\"\n      columns={state.columns}\n      data={state.data}\n      editable={{\n        onRowAdd: (newData) =>\n          new Promise((resolve) => {\n            setTimeout(() => {\n              resolve();\n              setState((prevState) => {\n                const data = [...prevState.data];\n                data.push(newData);\n                return { ...prevState, data };\n              });\n            }, 600);\n          }),\n        onRowUpdate: (newData, oldData) =>\n          new Promise((resolve) => {\n            setTimeout(() => {\n              resolve();\n              if (oldData) {\n                setState((prevState) => {\n                  const data = [...prevState.data];\n                  data[data.indexOf(oldData)] = newData;\n                  return { ...prevState, data };\n                });\n              }\n            }, 600);\n          }),\n        onRowDelete: (oldData) =>\n          new Promise((resolve) => {\n            setTimeout(() => {\n              resolve();\n              setState((prevState) => {\n                const data = [...prevState.data];\n                data.splice(data.indexOf(oldData), 1);\n                return { ...prevState, data };\n              });\n            }, 600);\n          }),\n      }}\n      localization={{\n        pagination: {\n            labelDisplayedRows: '{from}-{to} de {count}'\n        },\n        toolbar: {\n            nRowsSelected: '{0} fila(s) seleccionadas',\n            searchTooltip: 'Buscar',\n            searchPlaceholder:'Ingrese dato a buscar'\n        },\n        header: {\n            actions: 'Acciones'\n        },\n        body: {\n            addTooltip: 'Nueva receta',\n            deleteTooltip:'Eliminar',\n            editTooltip:'Editar',\n            emptyDataSourceMessage: 'Sin registros',\n            filterRow: {\n                filterTooltip: 'Filtros',\n                filterPlaceHolder: 'Filtros'\n            },\n            editRow: {\n              deleteText: 'Esta seguro de eliminar receta?',\n              cancelTooltip: 'Cancelar',\n              saveTooltip:'Guardar'\n          }\n        }\n    }}\n    options={{\n      filtering: true,\n      actionsColumnIndex: -1,\n      selection: true\n    }}\n    />\n  );\n}\n"]},"metadata":{},"sourceType":"module"}